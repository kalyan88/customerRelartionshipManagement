/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.crmshopping.struts.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.crmshopping.businessbean.CustomerBean;
import com.crmshopping.businessbean.ProductBean;
import com.crmshopping.dto.Agent;
import com.crmshopping.dto.Customer;
import com.crmshopping.dto.Product;
import com.crmshopping.struts.form.ProductForm;
import com.crmshopping.util.DataAccessException;

/**
 * MyEclipse Struts Creation date: 03-19-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/product" name="productForm" input="/form/product.jsp"
 *                scope="request" validate="true"
 */
public class ProductAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward getProductsByCategoryId(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		ProductForm productForm = (ProductForm) form;// TODO Auto-generated
														// method stub
		String CategoryId = productForm.getSubCategory();
		// String CategoryId=request.getParameter("subCategory");
		System.out.println("In action:" + CategoryId);
		ProductBean productBean = new ProductBean();
		ArrayList<Product> products = null;

		try {
			products = productBean.getProductsByCategoryId(CategoryId);
		} catch (DataAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if (products != null) {
			request.setAttribute("products", products);
			return mapping.findForward("product");
		} else {
			return mapping.findForward("welcome");
		}
	}

	public ActionForward call(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		Socket socket = null;
		
		HttpSession session=request.getSession();
		String customerId=(String)session.getAttribute("customerId");
		System.out.println("Customer Id from Session:"+customerId);
		CustomerBean custBean=new CustomerBean();
		Customer customerObject=custBean.getCustomerById(customerId);
		String customer=customerObject.getContact();
		
		
		String productId=request.getParameter("productId");
		System.out.println();
		ProductBean productBean=new ProductBean();
		Agent agent=productBean.getAgentByProduct(productId);
		System.out.println("CONVERSATION STARTED WITH "+agent.getAgentId());
		String representative=agent.getContact();
		
		
		
		String message=customer+"#"+representative;
		
		
		System.out.println("The message being sent is:"+message);
		try {
			socket = new Socket("192.168.1.199", 11111);

			PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
			out.println(message);
			out.close();
		} catch (UnknownHostException e) {
			e.printStackTrace();
		} catch (IOException e) {

			e.printStackTrace();
		}

		return mapping.findForward("product");
	}
}